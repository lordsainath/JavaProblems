Here are some beginner-friendly **Java array problems** to practice:  

### **Basic Level:**  
1. **Find Maximum and Minimum Element**  
   - Write a program to find the **maximum** and **minimum** element in an array.  

2. **Reverse an Array**  
   - Reverse an array in place **without using an extra array**.  

3. **Sum of All Elements**  
   - Calculate the sum of all elements in an array.  

   
5. **Count Even and Odd Numbers**  
   - Count the number of even and odd elements in an array.  

4. **Find Second Largest Number**  
   - Find the second-largest number in an array **without sorting**.  


6. **Check if Array is Sorted**  
   - Write a function to check if an array is sorted in ascending order.  

### **Intermediate Level:**  
7. **Remove Duplicates from an Array**  
   - Remove duplicate elements from an array and print the updated array.  

8. **Rotate Array to the Left by K Positions**  
   - Rotate an array **left by K positions**.  

9. **Merge Two Sorted Arrays**  
   - Merge two **sorted arrays** into a single sorted array **without using extra space**.  

10. **Find Missing Number in an Array**  
   - Given an array of numbers from **1 to N** (with one number missing), find the missing number.  

11. **Move Zeros to End**  
   - Move all zeros to the end of the array **without changing the order of non-zero elements**.  

12. **Find Common Elements in Two Arrays**  
   - Find common elements between two arrays.  

### **Advanced Level:**  
13. **Find the First Repeating Element**  
   - Find the first repeating element in an array **(the first element that appears twice)**.  

14. **Find the Union and Intersection of Two Arrays**  
   - Find the **union** and **intersection** of two arrays.  

15. **Sort an Array Without Using Built-in Methods**  
   - Implement **Bubble Sort**, **Selection Sort**, or **Insertion Sort** to sort an array.  

16. **Find Pairs with Given Sum**  
   - Find all pairs in an array whose sum is equal to a given number.  

17. **Find Subarray with Maximum Sum (Kadaneâ€™s Algorithm)**  
   - Find the subarray that has the maximum sum.  

18. **Check for Anagrams in Two Arrays**  
   - Check if two integer arrays are anagrams (contain the same elements with the same frequency).  
